# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master and develop branch
on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.18', '1.18.3' ]
    name: action test
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libgl1-mesa-dev xorg-dev gcc
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - run: go fmt ./...
      - run: go vet ./...
      - run: go test -race -coverprofile=coverage.out -covermode=atomic $(go list ./... | grep -v /cmd/)
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45
      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.8
      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            coverage.lcov
            coverage.out
      - run: go test -json ./... > test.json
      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json

  report:
    needs: test
    runs-on: ubuntu-latest
    name: action report
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - uses: codecov/codecov-action@v3

      #      - name: coveralls
      #        uses: coverallsapp/github-action@master
      #        with:
      #          github-token: ${{ secrets.GITHUB_TOKEN }}
      #          path-to-lcov: coverage.lcov

      - uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out
